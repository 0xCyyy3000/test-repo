#
# Workflow: TEST SSH
#

name: Test SSH
on: workflow_dispatch

jobs:

  test-ssh:

    name: Test SSH
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
    
      - name: Step 1
        shell: pwsh
        run: |
        
          # no need to install PS!
          # ubuntu-latest reports 7.2.7
          write-output $PSVersionTable
          
          # what about git?
          # ubuntu-latest reports ...
          git --version
        
          $ssh = (command ssh).Source
          $ssh = $ssh.Replace('\', '/') # that *has* to be / for git to be happy
          Write-Output "SSH at $ssh"
          
          $keyPath = "./certx.key"
          $keyPath = [System.IO.Path]::GetFullPath($keyPath, (get-location))
          $keyPath = $keyPath.Replace('\', '/') 
          Write-Output "Key at $keyPath"
          
          set-content $keyPath "${{ secrets.PRIVATE_TEST_ARTIFACT_KEY }}"
          
          # test-repo complains and refuses to use a non-protected key file
          if (-not $isWindows) {
            # so on ubuntu this reduces the permissions to user-only
            chmod 600 $keyPath
          }
        
          mkdir certx
          git init certx
          git -C certx config core.sparseCheckout true
          git -C certx config core.sshCommand "$ssh -i `"$keyPath`""
          git -C certx remote add -f origin "git@github.com:hazelcast/private-test-artifacts.git"
          git -C certx pull origin master

          ls certx